{"version":3,"file":"app.js","sources":["../../src/ResizePlugin.ts","../../src/Application.ts","../../src/index.ts"],"sourcesContent":["import type { ExtensionMetadata, Renderer } from '@pixi/core';\nimport { ExtensionType } from '@pixi/core';\nimport type { IApplicationOptions } from './Application';\n\ntype ResizeableRenderer = Pick<Renderer, 'resize'>;\n\n/**\n * Middleware for for Application's resize functionality\n * @private\n * @class\n */\nexport class ResizePlugin\n{\n    /** @ignore */\n    static extension: ExtensionMetadata = ExtensionType.Application;\n\n    public static resizeTo: Window | HTMLElement;\n    public static resize: () => void;\n    public static renderer: ResizeableRenderer;\n    public static queueResize: () => void;\n    private static _resizeId: number;\n    private static _resizeTo: Window | HTMLElement;\n    private static cancelResize: () => void;\n\n    /**\n     * Initialize the plugin with scope of application instance\n     * @static\n     * @private\n     * @param {object} [options] - See application options\n     */\n    static init(options?: IApplicationOptions): void\n    {\n        Object.defineProperty(this, 'resizeTo',\n            /**\n             * The HTML element or window to automatically resize the\n             * renderer's view element to match width and height.\n             * @member {Window|HTMLElement}\n             * @name resizeTo\n             * @memberof PIXI.Application#\n             */\n            {\n                set(dom: Window | HTMLElement)\n                {\n                    globalThis.removeEventListener('resize', this.queueResize);\n                    this._resizeTo = dom;\n                    if (dom)\n                    {\n                        globalThis.addEventListener('resize', this.queueResize);\n                        this.resize();\n                    }\n                },\n                get()\n                {\n                    return this._resizeTo;\n                },\n            });\n\n        /**\n         * Resize is throttled, so it's safe to call this multiple times per frame and it'll\n         * only be called once.\n         * @memberof PIXI.Application#\n         * @method queueResize\n         * @private\n         */\n        this.queueResize = (): void =>\n        {\n            if (!this._resizeTo)\n            {\n                return;\n            }\n\n            this.cancelResize();\n\n            // // Throttle resize events per raf\n            this._resizeId = requestAnimationFrame(() => this.resize());\n        };\n\n        /**\n         * Cancel the resize queue.\n         * @memberof PIXI.Application#\n         * @method cancelResize\n         * @private\n         */\n        this.cancelResize = (): void =>\n        {\n            if (this._resizeId)\n            {\n                cancelAnimationFrame(this._resizeId);\n                this._resizeId = null;\n            }\n        };\n\n        /**\n         * Execute an immediate resize on the renderer, this is not\n         * throttled and can be expensive to call many times in a row.\n         * Will resize only if `resizeTo` property is set.\n         * @memberof PIXI.Application#\n         * @method resize\n         */\n        this.resize = (): void =>\n        {\n            if (!this._resizeTo)\n            {\n                return;\n            }\n\n            // clear queue resize\n            this.cancelResize();\n\n            let width: number;\n            let height: number;\n\n            // Resize to the window\n            if (this._resizeTo === globalThis.window)\n            {\n                width = globalThis.innerWidth;\n                height = globalThis.innerHeight;\n            }\n            // Resize to other HTML entities\n            else\n            {\n                const { clientWidth, clientHeight } = this._resizeTo as HTMLElement;\n\n                width = clientWidth;\n                height = clientHeight;\n            }\n\n            this.renderer.resize(width, height);\n        };\n\n        // On resize\n        this._resizeId = null;\n        this._resizeTo = null;\n        this.resizeTo = options.resizeTo || null;\n    }\n\n    /**\n     * Clean up the ticker, scoped to application\n     * @static\n     * @private\n     */\n    static destroy(): void\n    {\n        globalThis.removeEventListener('resize', this.queueResize);\n        this.cancelResize();\n        this.cancelResize = null;\n        this.queueResize = null;\n        this.resizeTo = null;\n        this.resize = null;\n    }\n}\n","import { Container } from '@pixi/display';\nimport { autoDetectRenderer, extensions, ExtensionType } from '@pixi/core';\n\nimport type { Rectangle } from '@pixi/math';\nimport type { Renderer, IRendererOptionsAuto, AbstractRenderer } from '@pixi/core';\nimport type { IDestroyOptions } from '@pixi/display';\nimport { deprecation } from '@pixi/utils';\n\n/**\n * Any plugin that's usable for Application should contain these methods.\n * @memberof PIXI\n */\nexport interface IApplicationPlugin\n{\n    /**\n     * Called when Application is constructed, scoped to Application instance.\n     * Passes in `options` as the only argument, which are Application constructor options.\n     * @param {object} options - Application options.\n     */\n    init(options: IApplicationOptions): void;\n    /** Called when destroying Application, scoped to Application instance. */\n    destroy(): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface IApplicationOptions extends IRendererOptionsAuto, GlobalMixins.IApplicationOptions {}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface Application extends GlobalMixins.Application {}\n\n/**\n * Convenience class to create a new PIXI application.\n *\n * This class automatically creates the renderer, ticker and root container.\n * @example\n * // Create the application\n * const app = new PIXI.Application();\n *\n * // Add the view to the DOM\n * document.body.appendChild(app.view);\n *\n * // ex, add display objects\n * app.stage.addChild(PIXI.Sprite.from('something.png'));\n * @class\n * @memberof PIXI\n */\nexport class Application\n{\n    /** Collection of installed plugins. */\n    static _plugins: IApplicationPlugin[] = [];\n\n    /**\n     * The root display container that's rendered.\n     * @member {PIXI.Container}\n     */\n    public stage: Container = new Container();\n\n    /**\n     * WebGL renderer if available, otherwise CanvasRenderer.\n     * @member {PIXI.Renderer|PIXI.CanvasRenderer}\n     */\n    public renderer: Renderer | AbstractRenderer;\n\n    /**\n     * @param {object} [options] - The optional renderer parameters.\n     * @param {boolean} [options.autoStart=true] - Automatically starts the rendering after the construction.\n     *     **Note**: Setting this parameter to false does NOT stop the shared ticker even if you set\n     *     options.sharedTicker to true in case that it is already started. Stop it by your own.\n     * @param {number} [options.width=800] - The width of the renderers view.\n     * @param {number} [options.height=600] - The height of the renderers view.\n     * @param {HTMLCanvasElement} [options.view] - The canvas to use as a view, optional.\n     * @param {boolean} [options.useContextAlpha=true] - Pass-through value for canvas' context `alpha` property.\n     *   If you want to set transparency, please use `backgroundAlpha`. This option is for cases where the\n     *   canvas needs to be opaque, possibly for performance reasons on some older devices.\n     * @param {boolean} [options.autoDensity=false] - Resizes renderer view in CSS pixels to allow for\n     *   resolutions other than 1.\n     * @param {boolean} [options.antialias=false] - Sets antialias\n     * @param {boolean} [options.preserveDrawingBuffer=false] - Enables drawing buffer preservation, enable this if you\n     *  need to call toDataUrl on the WebGL context.\n     * @param {number} [options.resolution=PIXI.settings.RESOLUTION] - The resolution / device pixel ratio of the renderer.\n     * @param {boolean} [options.forceCanvas=false] - prevents selection of WebGL renderer, even if such is present, this\n     *   option only is available when using **pixi.js-legacy** or **@pixi/canvas-renderer** modules, otherwise\n     *   it is ignored.\n     * @param {number} [options.backgroundColor=0x000000] - The background color of the rendered area\n     *  (shown if not transparent).\n     * @param {number} [options.backgroundAlpha=1] - Value from 0 (fully transparent) to 1 (fully opaque).\n     * @param {boolean} [options.clearBeforeRender=true] - This sets if the renderer will clear the canvas or\n     *   not before the new render pass.\n     * @param {string} [options.powerPreference] - Parameter passed to webgl context, set to \"high-performance\"\n     *  for devices with dual graphics card. **(WebGL only)**.\n     * @param {boolean} [options.sharedTicker=false] - `true` to use PIXI.Ticker.shared, `false` to create new ticker.\n     *  If set to false, you cannot register a handler to occur before anything that runs on the shared ticker.\n     *  The system ticker will always run before both the shared ticker and the app ticker.\n     * @param {boolean} [options.sharedLoader=false] - `true` to use PIXI.Loader.shared, `false` to create new Loader.\n     * @param {Window|HTMLElement} [options.resizeTo] - Element to automatically resize stage to.\n     */\n    constructor(options?: IApplicationOptions)\n    {\n        // The default options\n        options = Object.assign({\n            forceCanvas: false,\n        }, options);\n\n        this.renderer = autoDetectRenderer(options);\n\n        // install plugins here\n        Application._plugins.forEach((plugin) =>\n        {\n            plugin.init.call(this, options);\n        });\n    }\n\n    /**\n     * Use the {@link PIXI.extensions.add} API to register plugins.\n     * @deprecated since 6.5.0\n     * @static\n     * @param {PIXI.IApplicationPlugin} plugin - Plugin being installed\n     */\n    static registerPlugin(plugin: IApplicationPlugin): void\n    {\n        // #if _DEBUG\n        deprecation('6.5.0', 'Application.registerPlugin() is deprecated, use extensions.add()');\n        // #endif\n        extensions.add({\n            type: ExtensionType.Application,\n            ref: plugin,\n        });\n    }\n\n    /** Render the current stage. */\n    public render(): void\n    {\n        this.renderer.render(this.stage);\n    }\n\n    /**\n     * Reference to the renderer's canvas element.\n     * @member {HTMLCanvasElement}\n     * @readonly\n     */\n    get view(): HTMLCanvasElement\n    {\n        return this.renderer.view;\n    }\n\n    /**\n     * Reference to the renderer's screen rectangle. Its safe to use as `filterArea` or `hitArea` for the whole screen.\n     * @member {PIXI.Rectangle}\n     * @readonly\n     */\n    get screen(): Rectangle\n    {\n        return this.renderer.screen;\n    }\n\n    /**\n     * Destroy and don't use after this.\n     * @param {boolean} [removeView=false] - Automatically remove canvas from DOM.\n     * @param {object|boolean} [stageOptions] - Options parameter. A boolean will act as if all options\n     *  have been set to that value\n     * @param {boolean} [stageOptions.children=false] - if set to true, all the children will have their destroy\n     *  method called as well. 'stageOptions' will be passed on to those calls.\n     * @param {boolean} [stageOptions.texture=false] - Only used for child Sprites if stageOptions.children is set\n     *  to true. Should it destroy the texture of the child sprite\n     * @param {boolean} [stageOptions.baseTexture=false] - Only used for child Sprites if stageOptions.children is set\n     *  to true. Should it destroy the base texture of the child sprite\n     */\n    public destroy(removeView?: boolean, stageOptions?: IDestroyOptions | boolean): void\n    {\n        // Destroy plugins in the opposite order\n        // which they were constructed\n        const plugins = Application._plugins.slice(0);\n\n        plugins.reverse();\n        plugins.forEach((plugin) =>\n        {\n            plugin.destroy.call(this);\n        });\n\n        this.stage.destroy(stageOptions);\n        this.stage = null;\n\n        this.renderer.destroy(removeView);\n        this.renderer = null;\n    }\n}\n\nextensions.handleByList(ExtensionType.Application, Application._plugins);\n","import { ResizePlugin } from './ResizePlugin';\nimport { extensions } from '@pixi/core';\n\nextensions.add(ResizePlugin);\n\nexport * from './Application';\nexport { ResizePlugin };\n"],"names":["ExtensionType","Container","autoDetectRenderer","deprecation","extensions"],"mappings":"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"}