/*!
 * @pixi/extract - v6.5.1
 * Compiled Sun, 24 Jul 2022 20:56:21 UTC
 *
 * @pixi/extract is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("@pixi/utils"),r=require("@pixi/math"),t=require("@pixi/core"),n=new r.Rectangle,a=function(){function r(e){this.renderer=e}return r.prototype.image=function(e,r,t){var n=new Image;return n.src=this.base64(e,r,t),n},r.prototype.base64=function(e,r,t){return this.canvas(e).toDataURL(r,t)},r.prototype.canvas=function(a,i){var o,u,d=this.renderer,h=!1,s=!1;a&&(a instanceof t.RenderTexture?u=a:(u=this.renderer.generateTexture(a),s=!0)),u?(o=u.baseTexture.resolution,i=null!=i?i:u.frame,h=!1,d.renderTexture.bind(u)):(o=d.resolution,i||((i=n).width=d.width,i.height=d.height),h=!0,d.renderTexture.bind(null));var x=Math.round(i.width*o),c=Math.round(i.height*o),l=new e.CanvasRenderTarget(x,c,1),g=new Uint8Array(4*x*c),p=d.gl;p.readPixels(Math.round(i.x*o),Math.round(i.y*o),x,c,p.RGBA,p.UNSIGNED_BYTE,g);var v=l.context.getImageData(0,0,x,c);if(r.arrayPostDivide(g,v.data),l.context.putImageData(v,0,0),h){var y=new e.CanvasRenderTarget(l.width,l.height,1);y.context.scale(1,-1),y.context.drawImage(l.canvas,0,-c),l.destroy(),l=y}return s&&u.destroy(!0),l.canvas},r.prototype.pixels=function(e,a){var i,o,u=this.renderer,d=!1;e&&(e instanceof t.RenderTexture?o=e:(o=this.renderer.generateTexture(e),d=!0)),o?(i=o.baseTexture.resolution,a=null!=a?a:o.frame,u.renderTexture.bind(o)):(i=u.resolution,a||((a=n).width=u.width,a.height=u.height),u.renderTexture.bind(null));var h=Math.round(a.width*i),s=Math.round(a.height*i),x=new Uint8Array(4*h*s),c=u.gl;return c.readPixels(Math.round(a.x*i),Math.round(a.y*i),h,s,c.RGBA,c.UNSIGNED_BYTE,x),d&&o.destroy(!0),r.arrayPostDivide(x,x),x},r.prototype.destroy=function(){this.renderer=null},r.arrayPostDivide=function(e,r){for(var t=0;t<e.length;t+=4){var n=r[t+3]=e[t+3];0!==n?(r[t]=Math.round(Math.min(255*e[t]/n,255)),r[t+1]=Math.round(Math.min(255*e[t+1]/n,255)),r[t+2]=Math.round(Math.min(255*e[t+2]/n,255))):(r[t]=e[t],r[t+1]=e[t+1],r[t+2]=e[t+2])}},r.extension={name:"extract",type:t.ExtensionType.RendererPlugin},r}();exports.Extract=a;
//# sourceMappingURL=extract.min.js.map
